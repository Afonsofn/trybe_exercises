{"ast":null,"code":"var _jsxFileName = \"/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-3/src/components/Clients.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clients extends React.Component {\n  render() {\n    const {\n      registers,\n      userLogin\n    } = this.props; // Recuperamos esses valores através das props que setamos no mapStateToProps\n\n    if (!userLogin.email) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Login n\\xE3o efetuado!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 34\n    }, this); // Aqui temos uma lógica caso nao tenha efetuado o login recuperando através do store global\n\n    if (registers.length < 1) // Aqui outra lógica para saber se não ninguém cadastrado ainda, recuperado também atras do state global.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Nenhum cliente cadastrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/SignUpPage\",\n          children: \"Cadastre agora!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/SignUpPage\",\n        children: \"Cadastre outros!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: registers.map((register, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID de registro: \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Nome: \", register.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Idade: \", register.age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", register.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, register.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  registers: state.addRegister,\n  userLogin: state.login\n});\n\nexport default connect(mapStateToProps)(Clients);","map":{"version":3,"sources":["/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-3/src/components/Clients.js"],"names":["React","connect","Link","Clients","Component","render","registers","userLogin","props","email","length","map","register","index","name","age","mapStateToProps","state","addRegister","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC,CADO,CACsC;;AAC7C,QAAI,CAACD,SAAS,CAACE,KAAf,EAAsB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CAFf,CAEsD;;AAC7D,QAAIH,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;AACxB,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMF,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGJ,SAAS,CAACK,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,8BACE;AAAA,oCACE;AAAA,6CAAoBA,KAAK,GAAG,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,mCAAUD,QAAQ,CAACE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,oCAAWF,QAAQ,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,oCAAWH,QAAQ,CAACH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAAUG,QAAQ,CAACH,KAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA5BmC;;AA+BtC,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,SAAS,EAAEW,KAAK,CAACC,WADe;AAEhCX,EAAAA,SAAS,EAAEU,KAAK,CAACE;AAFe,CAAL,CAA7B;;AAKA,eAAelB,OAAO,CAACe,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Clients extends React.Component {\n  render() {\n    const { registers, userLogin } = this.props; // Recuperamos esses valores através das props que setamos no mapStateToProps\n    if (!userLogin.email) return <div>Login não efetuado!</div>; // Aqui temos uma lógica caso nao tenha efetuado o login recuperando através do store global\n    if (registers.length < 1) // Aqui outra lógica para saber se não ninguém cadastrado ainda, recuperado também atras do state global.\n      return (\n        <div>\n          <div>Nenhum cliente cadastrado</div>\n          <Link to=\"/SignUpPage\">Cadastre agora!</Link>\n        </div>\n      );\n    return (\n      <div>\n        <Link to=\"/SignUpPage\">Cadastre outros!</Link>\n        <div>\n          {registers.map((register, index) => {\n            return (\n              <div key={register.email}>\n                <p>ID de registro: {index + 1}</p>\n                <p>Nome: {register.name}</p>\n                <p>Idade: {register.age}</p>\n                <p>Email: {register.email}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  registers: state.addRegister,\n  userLogin: state.login,\n});\n\nexport default connect(mapStateToProps)(Clients);"]},"metadata":{},"sourceType":"module"}