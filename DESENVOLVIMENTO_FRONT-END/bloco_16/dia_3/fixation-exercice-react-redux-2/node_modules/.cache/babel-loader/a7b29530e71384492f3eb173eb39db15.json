{"ast":null,"code":"var _jsxFileName = \"/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-2/src/components/BooksList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // Importamos o conect par conectar o React com o Redux.\n\nimport books from '../products'; // Importamos os dados do arquivo products.\n\nimport addItemToCartAction from '../actions'; // Importamos a action para fazermos os dispatchs.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass BooksList extends React.Component {\n  render() {\n    const {\n      addItemToCart\n    } = this.props; // Resgatamos o dispatch que fizemos com a action addItemToCartAction através da props addItemToCart que setamos no mapDispatchToProps.\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lista de livros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: books.map(book =>\n        /*#__PURE__*/\n        // Fazemos um map nos dados do products.\n        _jsxDEV(\"li\", {\n          children: [book.name, ' ', \"-\", ' R$', book.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addItemToCart(book) // Fazemos o dispatch através do click do button.\n            ,\n            children: \"Adicionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, book.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addItemToCart: item => dispatch(addItemToCartAction(item))\n});\n\nexport default connect(null, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-2/src/components/BooksList.js"],"names":["React","connect","books","addItemToCartAction","BooksList","Component","render","addItemToCart","props","map","book","name","price","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,OAAOC,mBAAP,MAAgC,YAAhC,C,CAA8C;;;;;AAE9C,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKC,KAA/B,CADO,CAC+B;;AACtC,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGN,KAAK,CAACO,GAAN,CAAWC,IAAD;AAAA;AAAY;AACrB;AAAA,qBACGA,IAAI,CAACC,IADR,EAEG,GAFH,OAIG,KAJH,EAKGD,IAAI,CAACE,KALR,eAME;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAG,MAAML,aAAa,CAACG,IAAD,CAF/B,CAEwC;AAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAAUA,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAsBD;;AAzBqC;;AA4BxC,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,aAAa,EAAGQ,IAAD,IAAUD,QAAQ,CAC/BX,mBAAmB,CAACY,IAAD,CADY;AADO,CAAf,CAA3B;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCT,SAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'; // Importamos o conect par conectar o React com o Redux.\nimport books from '../products'; // Importamos os dados do arquivo products.\nimport addItemToCartAction from '../actions'; // Importamos a action para fazermos os dispatchs.\n\nclass BooksList extends React.Component {\n  render() {\n    const { addItemToCart } = this.props; // Resgatamos o dispatch que fizemos com a action addItemToCartAction através da props addItemToCart que setamos no mapDispatchToProps.\n    return (\n      <>\n        <h1>Lista de livros</h1>\n        <ul>\n          {books.map((book) => ( // Fazemos um map nos dados do products.\n            <li key={ book.name }>\n              {book.name}\n              {' '}\n              -\n              {' R$'}\n              {book.price}\n              <button\n                type=\"button\"\n                onClick={ () => addItemToCart(book) } // Fazemos o dispatch através do click do button.\n              >\n                Adicionar\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItemToCart: (item) => dispatch(\n    addItemToCartAction(item)\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(BooksList);"]},"metadata":{},"sourceType":"module"}