{"ast":null,"code":"var _jsxFileName = \"/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-2/src/components/Cart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // Importamos o conect par conectar o React com o Redux.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  render() {\n    const {\n      cartItems\n    } = this.props; // Recuperamos os dados do store global pela prop cartItem, através do mapStateToProps.\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meu Carrinho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [console.log(cartItems), cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 43\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // O mapStateToProps pega os dados do store e disponibiliza através de props pra usarmos no componente.\n  cartItems: state.cart.cartItems // Aqui setamos a key da prop que queremos chamar e dizemos oq vai ter naquela key.\n\n});\n\nexport default connect(mapStateToProps)(Cart); // Passamos o connect no export para unirmos o store ao componente.","map":{"version":3,"sources":["/home/afonso/Documents/trybe_exercises/DESENVOLVIMENTO_FRONT-END/bloco_16/dia_3/fixation-exercice-react-redux-2/src/components/Cart.js"],"names":["React","connect","Cart","Component","render","cartItems","props","console","log","map","item","index","name","mapStateToProps","state","cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;;;;AAEvC,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B,CADO,CAC2B;;AAClC,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGC,OAAO,CAACC,GAAR,CAAYH,SAAZ,CADH,EAEGA,SAAS,CAACI,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,oBAAmBD,IAAI,CAACE;AAAxB,WAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,gBAA/B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AASD;;AAZgC;;AAenC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAAE;AACpCT,EAAAA,SAAS,EAAES,KAAK,CAACC,IAAN,CAAWV,SADY,CACD;;AADC,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,IAAzB,CAAf,C,CAA+C","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'; // Importamos o conect par conectar o React com o Redux.\n\nclass Cart extends React.Component {\n  render() {\n    const { cartItems } = this.props; // Recuperamos os dados do store global pela prop cartItem, através do mapStateToProps.\n    return (\n      <>\n        <h1>Meu Carrinho</h1>\n        <ul>\n          {console.log(cartItems)}\n          {cartItems.map((item, index) => <li key={ index }>{item.name}</li>)} {/* Aqui fazemos mapeamos as info que estão dentro do array do store global. */}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ // O mapStateToProps pega os dados do store e disponibiliza através de props pra usarmos no componente.\n  cartItems: state.cart.cartItems, // Aqui setamos a key da prop que queremos chamar e dizemos oq vai ter naquela key.\n});\n\nexport default connect(mapStateToProps)(Cart); // Passamos o connect no export para unirmos o store ao componente."]},"metadata":{},"sourceType":"module"}